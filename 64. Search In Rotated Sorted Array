// Leetoce link:- https://leetcode.com/problems/search-in-rotated-sorted-array/description/
class Solution {
    public int search(int[] nums, int target) {
        int start = 0;
        int end = nums.length-1;
        while(start<=end){
            int mid = (start+end)>>1;

            if(nums[mid]==target){
                return mid;
            }
            else if(nums[start]<=nums[mid]){
                if(nums[start]<=target && target<=nums[mid]){
                    end = mid-1;
                }
                else{
                    start = mid+1;
                }
            }
            else{
                if(nums[mid]<=target && target<=nums[end]){
                    start = mid+1;
                }
                else{
                    end = mid-1;
                }
            }

        }
        return -1;
    }
}

// COding Ninjas Link :- https://www.codingninjas.com/studio/problems/search-in-rotated-sorted-array_8230687?challengeSlug=striver-sde-challenge
public class Solution {
    public static int search(int nums[], int key) {
        int start = 0;
        int end = nums.length-1;
        while(start<=end){
            int mid = (start+end)>>1;

            if(nums[mid]==key){
                return mid;
            }
            else if(nums[start]<=nums[mid]){
                if(nums[start]<=key && key<=nums[mid]){
                    end = mid-1;
                }
                else{
                    start = mid+1;
                }
            }
            else{
                if(nums[mid]<=key && key<=nums[end]){
                    start = mid+1;
                }
                else{
                    end = mid-1;
                }
            }

        }
        return -1;
    }
}
