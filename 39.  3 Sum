// Leetcode Link :- https://leetcode.com/problems/3sum/
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        Arrays.sort(nums);
        for(int i=0;i<nums.length-2;i++){
            if (nums[i] > 0) {
                break;
            }
            if(i!=0 && nums[i]==nums[i-1]){
                continue;
            }
            int j = i+1;
            int k = nums.length-1;
            while(j<k){
                int n = nums[i]+nums[j]+nums[k];
                if(n==0){
                    ArrayList<Integer> temp = new ArrayList<Integer>();
                    temp.add(nums[i]); temp.add(nums[j]); temp.add(nums[k]);
                    res.add(temp);
                    j++;
                    k--;
                    while(j < k && nums[j] == nums[j-1]){  
                        j++;
                    }
                    while(j < k && nums[k] == nums[k+1]){
                        k--;
                    }
                }
                else if(n>0){
                    k--;
                }else{
                    j++;
                }
            }
        }
        System.gc();
        return (List)res;
    }
}


// COding Ninjas Link :- https://www.codingninjas.com/studio/problems/3sum_8230739?challengeSlug=striver-sde-challenge
import java.util.* ;
import java.io.*; 
public class Solution {

	public static ArrayList<ArrayList<Integer>> findTriplets(int[] arr, int n, int K)  {
		ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
		boolean found = false;
        Arrays.sort(arr);

		for(int i=0;i<n-2;i++){
			if(i!=0 && arr[i-1]==arr[i]) continue;
			int j = i+1;
			int k = n-1;
			while(j<k){
				int sum = arr[i]+arr[j]+arr[k];
				if(sum==K){
					ArrayList<Integer> s = new ArrayList<Integer>();
					s.add(arr[i]);
					s.add(arr[j]);
					s.add(arr[k]);
					ans.add(s);
					j++;
					k--;
					while(j<k && arr[j]==arr[j-1]) j++;
					while(j<k && arr[k]==arr[k+1]) k--;
					found = true;
				}
				else if(sum>K){
					k--;
				}
				else{
					j++;
				}
			}
		}
		
		// if(found==false){
		// 	ArrayList<Integer> temp = new ArrayList<Integer>();
		// 	temp.add(-1);
		// 	ans.add(temp);
		// }
		
		return ans;

	}
}
