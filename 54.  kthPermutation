// Leetcode Link :- https://leetcode.com/problems/permutation-sequence/
class Solution {
    public String getPermutation(int n, int k) {
        int fact = 1;
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=1;i<n;i++){
            fact*=i;
            list.add(i);
        }
        list.add(n);
        String ans = "";
        k = k-1;
        while(true){
            ans+= list.get(k/fact);
            list.remove(k/fact);
            if(list.size()==0) break;
            k = k%fact;
            fact = fact/list.size();
        }
        return ans;
    }
}

// Coding Ninjas Link :- https://www.codingninjas.com/studio/problems/k-th-permutation-sequence_8230822?challengeSlug=striver-sde-challenge&leftPanelTab=0
import java.util.ArrayList;

public class Solution {
    public static String kthPermutation(int n, int k) {
        int fact = 1;
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=1;i<n;i++){
            fact*=i;
            list.add(i);
        }
        list.add(n);
        String ans = "";
        k = k-1;
        while(true){
            ans+= list.get(k/fact);
            list.remove(k/fact);
            if(list.size()==0) break;
            k = k%fact;
            fact = fact/list.size();
        }
        return ans;
    }
}
