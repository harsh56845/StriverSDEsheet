// Coding Ninjas Link :- https://www.codingninjas.com/studio/problems/maximum-meetings_8230795?challengeSlug=striver-sde-challenge&leftPanelTab=1
import java.util.* ;
import java.io.*; 

class meeting{
    int start;
    int end;
    int pos;
    meeting(int start,int end,int pos){
        this.start = start;
        this.end = end;
        this.pos = pos;
    }
}
class meetingComprator implements Comparator<meeting>{
    @Override
    public int compare(meeting op1,meeting op2){
        if(op1.end<op2.end){
            return -1;
        }
        else if(op1.end>op2.end){
            return 1;
        }
        else if(op1.pos<op2.pos){
            return -1;
        }
        // else 
            return 1;
    }
}
public class Solution {
    public static List<Integer> maximumMeetings(int[] start, int[] end) {        
        List<meeting> meet = new ArrayList<meeting>();

        for(int i=0;i<start.length;i++){
            meet.add(new meeting(start[i], end[i], i+1));
        }
        meetingComprator mc = new meetingComprator();
        Collections.sort(meet,mc);
        List<Integer> ans = new ArrayList<Integer>();
        ans.add(meet.get(0).pos);
        int limit = meet.get(0).end;
        
        for(int i=1;i<meet.size();i++){
            if(limit<meet.get(i).start){
                ans.add(meet.get(i).pos);
                limit = meet.get(i).end;
            }
        }

        return ans;
    }
}
